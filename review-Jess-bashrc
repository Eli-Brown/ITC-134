# ~.bashrc executed by bash(1) for non-login shells.
# see usrsharedocbashexamplesstartup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    i) ;;
      ) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern  used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x usrbinlesspipe ] && eval $(SHELL=binsh lesspipe)

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z ${debian_chroot-} ] && [ -r etcdebian_chroot ]; then
    debian_chroot=$(cat etcdebian_chroot)
fi

# set a fancy prompt (non-color, unless we know we want color)
case $TERM in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n $force_color_prompt ]; then
    if [ -x usrbintput ] && tput setaf 1 &devnull; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISOIEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ $color_prompt = yes ]; then
    PS1='${debian_chroot+($debian_chroot)}[033[01;32m]u@h[033[00m][033[01;34m]w[033[00m]$ '
else
    PS1='${debian_chroot+($debian_chroot)}u@hw$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@hostdir
case $TERM in
xtermrxvt)
    PS1=[e]0;${debian_chroot+($debian_chroot)}u@h wa]$PS1
    ;;
)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x usrbindircolors ]; then
    test -r ~.dircolors && eval $(dircolors -b ~.dircolors)  eval $(dircolors -b)
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31warning=01;35note=01;36caret=01;32locus=01quote=01'

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~.bash_aliases, instead of adding them here directly.
# See usrsharedocbash-docexamples in the bash-doc package.

if [ -f ~.bash_aliases ]; then
    . ~.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in etcbash.bashrc and etcprofile
# sources etcbash.bashrc).
if ! shopt -oq posix; then
  if [ -f usrsharebash-completionbash_completion ]; then
    . usrsharebash-completionbash_completion
  elif [ -f etcbash_completion ]; then
    . etcbash_completion
  fi
fi
#PS1='[e[1;36m]d [e[1;32m]t [e[1;33m]u@[e[1;35m]hw$[e[0;31m] '

# [[ $PS1 [[ && usrgamesfortune  usrgamescowsay -n
PS1=($( usrgamesfortune  usrgamescowsay -n)[e[1;36m]d [e[1;32m]t [e[1;33m]u@[e[1;35m]hw$[e[0;31m] 

PS1="(\$( /usr/games/fortune )\n\[\e[1;31m\]\d \[\e[1;30m\]\t'\[\e[1;32m\]\u@\h \w -> \n\[\e[1;34m\] \@ \d\$\[\e[m\] ' \[\e[1;30m\]\u@\[\e[1;31m\]\h:\w\$\[\e[0;34m\] "
